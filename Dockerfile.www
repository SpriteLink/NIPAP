# This file describes a docker image for running nipap-www in docker
#
# Build the docker image:
#     docker build -t nipap-www -f Dockerfile.www .
#
# Run by linking to the container running nipapd. -i -t is for interactive,
# use -d if you wish to run the container in the background:
#     docker run -i -t --link nipapd --name nipap-www nipap-www
#
# Most configuration variables are provided via environment variables.
#   NIPAPD_USERNAME     username to authenticate to nipapd
#   NIPAPD_PASSWORD     password to authenticate to nipapd
#   NIPAPD_HOST         host where nipapd is running [nipapd]
#   NIPAPD_PORT         port of nipapd [1337]
#   WWW_USERNAME        web UI username [guest]
#   WWW_PASSWORD        web UI password [guest]
#
# Some variables have a default, indicated in square brackets, the rest you need
# to fill in. If you are linking to a container running nipapd, just enter the
# name of the container as NIPAPD_HOST.
#
# WWW_USERNAME & WWW_PASSWORD is used to create a new account in the local auth
# database so that you can later login to the web interface.
#

FROM ubuntu:noble

LABEL org.opencontainers.image.authors="Kristian Larsson <kristian@spritelink.net>, Lukas Garberg <lukas@spritelink.net>"

ENV DEBIAN_FRONTEND=noninteractive

ENV NIPAPD_HOST=nipapd NIPAPD_PORT=1337 WWW_USERNAME=guest WWW_PASSWORD=guest

# apt update, upgrade & install packages
RUN apt-get update -qy && apt-get upgrade -qy \
 && apt-get install --no-install-recommends -qy apache2 \
    build-essential \
    libapache2-mod-wsgi-py3 \
    libpq-dev \
    libldap-dev \
    libsasl2-dev \
    libsqlite3-dev \
    postgresql-client \
    python3 \
    python3-all \
    python3-pip \
    python3-dev \
 && pip3 --no-input install --break-system-packages --no-cache-dir envtpl==0.7.2 \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

# Install any additional CA certs from ca_certs folder required by corp proxies etc
RUN mkdir /ca_certs
COPY ca_certs/ /ca_certs/
RUN mkdir -p /usr/local/share/ca-certificates \
 && cp /ca_certs/*.crt /usr/local/share/ca-certificates/ || true \
 && rm -rf /ca_certs \
 && update-ca-certificates
RUN pip3 config set global.cert /etc/ssl/certs/ca-certificates.crt
ENV REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt

# Install pynipap, nipap and nipap-www
COPY pynipap /pynipap
COPY nipap /nipap
COPY nipap-www /nipap-www
RUN cd /pynipap && pip3 --no-input install --break-system-packages --no-cache-dir . && \
    cd /nipap && pip3 --no-input install --break-system-packages --no-cache-dir . && \
    cd /nipap-www && pip3 --no-input install --break-system-packages --no-cache-dir . && \
    mkdir -p /etc/nipap/www/ && cp nipap-www.wsgi /etc/nipap/www/ && \
    cd ..

EXPOSE 80
VOLUME [ "/var/log/apache2" ]

ENTRYPOINT [ "/nipap-www/entrypoint.sh" ]
